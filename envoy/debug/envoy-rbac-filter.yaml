admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            response_headers_to_add:
            - header:
                key: test-key
                value: test-value
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_google
                per_filter_config:
                  # The key should match the filter name
                  "envoy.filters.http.rbac":
                    rbac:
                      rules:
                        action: ALLOW
                        policies:
                          "ping-viewer":
                            permissions:
                            - and_rules:
                                rules:
                                - header: { name: ":method", exact_match: "GET" }
                                - url_path:
                                    path: { prefix: "/ping" }
                            principals:
                            - any: true


          # route rate limit  https://www.envoyproxy.io/docs/envoy/v1.14.1/api-v2/api/v2/route/route_components.proto#envoy-api-field-route-virtualhost-rate-limits
          http_filters:
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                secure_istio_io:
                  issuer: "testing@secure.istio.io"
                  local_jwks:
                    inline_string: '{"keys":[ {"e":"AQAB","kid":"DwecDUxr0VC28-Mkd7pWyek9eFtWswZTAdLGmLAvyIs","kty":"RSA","n":"8dmXfereXRWqUgX00ukS8dH8B7njXsOZCpJLxBTBP3fczjdggeUoGZrTFBgRmXUgh6o1Wnix4PPhksGvjP3ImQgyog674l7HNzKlAStS3jzy8ZcAZYge_Aq29Nb4a76Cusyexnmm_Xl4RGJuvFKtHcoSk7AunZQjJVkRVkpOq4-RYzYg2Wrn9CtTKHoeMrhV2gvfuCyKJu1UF7P3jLIR9XzvOjWLlJNao89C3OiwfwMMo3e5YJGlkQBLP7WFgPEH1hI6negATpw5leRnwMnNAY9YcV8HFg6YgKJen4gHHMOZnPuEEQ3z4EaZZ3h2XnoV2poyByWWcJcl8dmhdjxCmw"}]}'
              rules:
              - match:
                  prefix: /
                requires:
                  provider_name: "secure_istio_io"

          - name: envoy.filters.http.rbac
            config:
              rules:
                action: ALLOW
                policies:
                  "service-admin":
                    permissions:
                      - any: true
                    principals:
                      authenticated:
                        principal_name:
                          ## 精确匹配
                          exact: eliot
                  "product-viewer":
                    permissions:
                      - and_rules:
                          rules:
                          - header: { name: ":method", exact_match: "GET" }
                          - url_path:
                              path: { prefix: "/products" }
#                          - or_rules:
#                              rules:
#                              - destination_port: 80
#                              - destination_port: 443
                    principals:
                      - any: true
          - name: envoy.filters.http.router

  clusters:
  - name: service_google
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_google
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 192.168.0.102
                port_value: 8080


